- hosts: krustlet
  gather_facts: no
  tasks:
  - name: Download the krustlet binary
    get_url:
      url: https://storage.googleapis.com/fedra-storage/krustlet-wasi
      dest: /usr/local/bin/krustlet-wasi
      owner: root
      group: root
      mode: 0755

  # - name: Download the krustlet binary
  #   get_url:
  #     url: https://krustlet.blob.core.windows.net/releases/krustlet-canary-linux-aarch64.tar.gz
  #     dest: ~{{ ansible_user }}/krustlet-canary-linux-aarch64.tar.gz

  # - name: Create krustlet directory
  #   file: 
  #     path: ~{{ ansible_user }}/krustlet
  #     state: directory

  # - name: Unarchive the binary
  #   command: tar -xzf krustlet-canary-linux-aarch64.tar.gz -C krustlet
  #   args:
  #     creates: ~{{ ansible_user }}/krustlet/krustlet-wasi

  # - name: Move to the /usr/local/bin
  #   become: yes
  #   copy:
  #     src: ~{{ ansible_user }}/krustlet/krustlet-wasi
  #     dest: /usr/local/bin/krustlet-wasi
  #     remote_src: yes
  #     owner: root
  #     group: root
  #     mode: 0755

  # - set_fact:
  #     token_user: "{{ token_user }}"
  #     token_secret: "{{ token_secret }}"
  #     token: "{{ token_user }}.{{ token_secret }}"

  - name: Create .krustlet directory
    file: 
      path: ~{{ ansible_user }}/.krustlet/config/
      state: directory

  # - name: Copy the bootstrap.conf
  #   template:
  #     src: "bootstrap.conf.j2"
  #     dest: ~{{ ansible_user }}/.krustlet/config/bootstrap.conf

  - name: Copy the kube-config
    copy:
      src: /Users/jiayihu/Desktop/Repo/fedra-thesis/packages/fedra-compute/.kube/config.yml
      dest: ~{{ ansible_user }}/.krustlet/config/kubeconfig

  - name: Copy K3s service file
    register: k3s_service
    copy:
      content: |
        #!/sbin/openrc-run

        export KUBECONFIG=~{{ ansible_user }}/.krustlet/config/kubeconfig
        export KRUSTLET_DATA_DIR=~{{ ansible_user }}/.krustlet
        export RUST_LOG="info,regalloc=error,api"
        name="krustlet"
        command="/usr/local/bin/krustlet-wasi"
        command_args="--node-ip {{ ansible_host }}"
        command_background=true
        pidfile="/run/${RC_SVCNAME}.pid"
        output_log="/var/log/krustlet.log"
        error_log="/var/log/krustlet.err"
      dest: /etc/init.d/krustlet
      owner: root
      group: root
      mode: 0755

  - name: Create K3s service symlink
    file:
      src: /etc/init.d/krustlet
      dest: /etc/runlevels/default/krustlet
      state: link

  - name: Enable and check K3s service
    service:
      name: krustlet
      state: restarted
      enabled: yes

  vars:
    # bootstrap_file: ~{{ ansible_user }}/.krustlet/config/bootstrap.conf
    # token_user: "{{ lookup('password', '/dev/null length=6 chars=ascii_lowercase') }}"
    # token_secret: "{{ lookup('password', '/dev/null length=16 chars=ascii_lowercase') }}"
